namespace util
  function getCarouselByGenre(genre as String, contentType = "series" as String) as Object
    returnObject = {
      "title": genre
      "items": []
    }

    filteredContent = []
    if contentType = "series"
      filteredContent = getShowsByGenre(genre)
    else if contentType = "movie"
      filteredContent = getMoviesByGenre(genre)
    end if

    for each item in filteredContent
      returnObject.items.push({
        "id": item.id,
        "name": item.name,
        "genres": item.genres,
        "rating": rodash.toString(item.vote_average),
        "poster_path": item.poster_path,
        "backdrop_path": item.backdrop_path,
        "description": item.overview
      })
    end for

    return returnObject
  end function

  function getRelatedCarousel(content = {} as Object, contentType = "" as String) as Object
    print source_function_name, contentType
    returnObject = {
      "title": `Related ${contentType = "series" ? "Shows" : "Movies"}`,
      "items": []
    }

    filteredContent = []
    if contentType = "series"
      filteredContent = getShowsByGenre(content.genres[0])
    else if contentType = "movie"
      filteredContent = getMoviesByGenre(content.genres[0])
    end if

    filteredContent = rodash.sampleSize(filteredContent, 10)

    for each item in filteredContent
      returnObject.items.push({
        "id": item.id,
        "name": item.name,
        "genres": item.genres,
        "rating": rodash.toString(item.vote_average),
        "poster_path": item.poster_path,
        "backdrop_path": item.backdrop_path,
        "description": item.overview
      })
    end for

    return returnObject
  end function

  function getShowsByGenre(genre as String) as Object
    m.tempGenre = genre
    return rodash.filter(m.global.content, function(o)
      return o.type = "series" AND rodash.indexOf(o.genres, m.tempGenre) <> -1
    end function)
  end function

  function getMoviesByGenre(genre as String) as Object
    m.tempGenre = genre
    return rodash.filter(m.global.content, function(o)
      return o.type = "movie" AND rodash.indexOf(o.genres, m.tempGenre) <> -1
    end function)
  end function

  function getContentById(id as String) as Object
    m.tempId = id
    return rodash.find(m.global.content, function(o)
      return o.id = m.tempId
    end function)
  end function

  function getGenreNamesForType(contentType as String) as Object
    genreList = []
    print source_function_name, contentType, m.global.genres[contentType]
    for each item in m.global.genres[contentType]
      genreList.push(item.name)
    end for
    return genreList
  end function

end namespace
