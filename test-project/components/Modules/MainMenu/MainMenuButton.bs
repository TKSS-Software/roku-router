import "pkg:/source/roku_modules/promises/promises.brs"

sub init()
    m.top.focusable = true
    m.top.color = "#00000000"
    m.top.width = 200
    m.top.height = 80
    m.inFocusChain = false
    m.label.font = "font:MediumBoldSystemFont"
    onUnfocusState()
    m.top.observeField("focusedChild", "onFocusChildChanged")
end sub

sub onFocusChildChanged(event as Object)
    inFocusChain = event.getData() <> Invalid

    if NOT m.inFocusChain AND inFocusChain then
        m.inFocusChain = true
        onFocusState()
    else if m.inFocusChain AND NOT inFocusChain then
        m.inFocusChain = false
        onUnfocusState()
    end if
end sub

sub onFocusState()
    m.icon.blendColor = "#FFFFFFFF"
    m.label.color = "#FFFFFFFF"
end sub

sub onUnfocusState()
    m.icon.blendColor = "#E4D4D4A0"
    m.label.color = "#E4D4D4A0"
end sub

function onKeyEvent(key = "" as String, press = false as Boolean) as Boolean
    if press then
        if key = "OK" then
            navigateTo = m.top.router@.navigateTo(m.top.link)
            if navigateTo <> Invalid then
                promises.chain(navigateTo).then(sub(response as Dynamic)
                    m.top.router@.setFocus(true)
                end sub)
                return true
            end if
        end if
    end if

    return false
end function