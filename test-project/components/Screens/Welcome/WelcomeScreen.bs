sub init()
    m.buttonGroup.observeField("buttonSelected", "onButtonPress")
    m.buttonGroup.buttons = ["Go to Shows Catalog", "Go to Movies Catalog", "Test Params Change", "Test Hash Change", "Toggle Logged In State"]

    checkLoggedInState()
    m.global.observeField("isLoggedIn", "checkLoggedInState")
end sub

sub checkLoggedInState()
    if m.global.isLoggedIn then
        m.label.text = "User is logged in"
    else
        m.label.text = "User is not logged in"
    end if
end sub

function onScreenOpen(context = Invalid as Dynamic) as Dynamic
    m.buttonGroup.setFocus(true)
    return promises.resolve(Invalid)
end function

function onRouteUpdate(event = {} as Object) as Dynamic
    return promises.resolve(Invalid)
end function

function beforeScreenClose(context = Invalid as Dynamic) as Dynamic
    m.buttonGroup.unobserveField("buttonSelected")
    return promises.resolve(Invalid)
end function

sub onButtonPress(event as Object)
    button = event.getData()
    if button = 0 then
        Router.navigateTo("/shows")
    else if button = 1 then
        Router.navigateTo("/movies")
    else if button = 2 then
        Router.navigateTo("/?firstLoad=false", { allowReuse: true })
    else if button = 3 then
        Router.navigateTo("/#hello")
    else if button = 4 then
        m.global.isLoggedIn = NOT m.global.isLoggedIn
    end if
end sub

function onScreenResume(context = Invalid as Dynamic) as Dynamic
    m.buttonGroup.setFocus(true)
    return promises.resolve(Invalid)
end function